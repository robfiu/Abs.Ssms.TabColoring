<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <!-- Referencja do biblioteki z kodem rozszerzenia -->
    <ProjectReference Include="..\Abs.Ssms.TabColoring\Abs.Ssms.TabColoring.csproj">
      <Name>Abs.Ssms.TabColoring</Name>
      <Private>false</Private>
    </ProjectReference>

    <!-- Manifest VSIX + (opcjonalnie) ikony/baner -->
    <None Include="source.extension.vsixmanifest" />
    <!-- Przykładowe assety graficzne (jeśli masz):
    <Content Include="Assets\icon.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    -->
  </ItemGroup>

  <PropertyGroup>
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>

    <!-- To powoduje, że output DLL z projektu .csproj trafi do paczki VSIX -->
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>

    <!-- Pozwala ładować MEF z folderu rozszerzenia -->
    <UseCodebase>true</UseCodebase>
  </PropertyGroup>

  <!-- Klasyczny MSBuild (NIE dodawaj atrybutu Sdk="...") -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" />

  <!-- Główne cele VSIX – dostępne na runners/windows (VS jest zainstalowany) -->
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\VSSDK\Microsoft.VsSDK.targets"
          Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\VSSDK\Microsoft.VsSDK.targets')" />

  <!-- (opcjonalnie) NuGet BuildTools – pomaga w CI, ale nie zastępuje powyższego importu -->
  <ItemGroup>
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="17.10.2178" PrivateAssets="all" />
  </ItemGroup>
</Project>
