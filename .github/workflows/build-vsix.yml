name: Build VSIX
on:
  push: { branches: [ main, master ] }
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Ensure VSSDK (install VS component)
      shell: pwsh
      run: |
        $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        if (-not (Test-Path $vswhere)) { throw "vswhere.exe not found" }

        # Ścieżka do zainstalowanego Visual Studio
        $vsPath = & $vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        if (-not $vsPath) { throw "Visual Studio not found" }
        Write-Host "VS installation path: $vsPath"

        # Doinstaluj komponent VSSDK (cicho)
        $installer = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
        & $installer modify --installPath "$vsPath" --add Microsoft.VisualStudio.Component.VSSDK --quiet --norestart --nocache

        # Sprawdź, czy cele VSSDK są dostępne (2 typowe lokalizacje)
        $targets1 = Join-Path $vsPath "MSBuild\Microsoft\VisualStudio\v17.0\VSSDK\Microsoft.VsSDK.targets"
        $targets2 = Join-Path $vsPath "Common7\IDE\CommonExtensions\Microsoft\VSSDK\Microsoft.VsSDK.targets"
        if (Test-Path $targets1) { Write-Host "Found VSSDK targets: $targets1" }
        elseif (Test-Path $targets2) { Write-Host "Found VSSDK targets: $targets2" }
        else { Write-Warning "VSSDK targets not found yet (installer may still be finalizing). Build should still find them via MSBuildExtensionsPath." }
        

    - name: Restore (solution)
      run: msbuild Abs.Ssms.TabColoring.sln /t:Restore /m /v:m

    - name: Build VSIX project (Release) + BINLOG
      run: msbuild "src\Abs.Ssms.TabColoring.Vsix\Abs.Ssms.TabColoring.Vsix.vsixproj" /p:Configuration=Release /m /v:m /bl:msbuild.binlog

    - name: Show outputs (debug)
      shell: pwsh
      run: |
        Write-Host "=== VSIX under VSIX project bin ==="
        Get-ChildItem -Path src/Abs.Ssms.TabColoring.Vsix/bin/Release -Recurse -ErrorAction SilentlyContinue | 
          Format-Table FullName, Length
        Write-Host "=== Find *.vsix anywhere ==="
        Get-ChildItem -Path . -Recurse -Filter *.vsix -ErrorAction SilentlyContinue | ForEach-Object {
          Write-Host "FOUND VSIX: $($_.FullName)"
        }

    - name: Upload VSIX + binlog
      uses: actions/upload-artifact@v4
      with:
        name: vsix-and-logs
        path: |
          **/*.vsix
          msbuild.binlog


